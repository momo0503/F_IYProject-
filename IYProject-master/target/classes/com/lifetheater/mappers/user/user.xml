<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="User"><!-- 매퍼 네임스페이스 명을 Board로 지정. -->
	<resultMap type="com.lifetheater.vo.UserVO" id="UserMap">
		<id property="email" column="email" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="regDate" column="reg_date" />
		<result property="point" column="point" />
		<result property="userKey" column="user_key" />
		<result property="membertype" column="membertype" />
		<result property="phone" column="phone" />
		<result property="loginWay" column="login_way" />
		<result property="prefTheater01" column="pref_theater01" />
		<result property="prefTheater02" column="pref_theater02" />
		<result property="prefTheater03" column="pref_theater03" />
	</resultMap>
	
	<!-- 넘어온 카카오 데이터와 db컬럼명을 맞춰서 보내기 위한 map생성 -->
	<resultMap type="com.lifetheater.kakao.model.KakaoVO" id="KakaoUserMap">
  	  	<id property="email" column="email"/>    
  	<result property="nickname" column="name"/>
  	</resultMap>
  	
	<insert id="Tem_email" parameterType="u">
		insert into tbl_inyeon_user(email,pw,name,phone,user_key,reg_date,membertype,login_way) values(#{email},#{pw},#{name},#{phone},#{userKey},sysdate,1,1)
	</insert>
	<select id="conf_Email" parameterType="u" resultType="String">
		select email from tbl_inyeon_user where email=#{email}
	</select>
	<update id="ch_key">
		update tbl_inyeon_user set user_key='hye_ah' where email=#{email} and user_key=#{userKey}
	</update>
	<select id="user_list" resultType="u">
		select * from tbl_inyeon_user
	</select>
	<delete id="auto_del">
		delete from tbl_inyeon_user <![CDATA[where reg_date < (select sysdate - 1 from dual) and user_key != 'hye_ah']]>
	</delete>
	<delete id="test_del">
		delete from tbl_inyeon_user <![CDATA[where reg_date < (select sysdate - 1/(24*60) from dual) and user_key != 'hye_ah']]>
	</delete>
	<select id="conf_phone" parameterType="u" resultType="String">
		select phone from tbl_inyeon_user where phone=#{phone}
	</select>
	
	<select id="searchUser" resultMap="UserMap" >
	select * from tbl_inyeon_user where email=#{email}
	</select>
	
	
	<select id="searchid" resultMap="UserMap">
select * from tbl_inyeon_user where name=#{name} and phone=#{phone}
</select>

<select id="searchpw" resultMap="UserMap">
select * from tbl_inyeon_user where email=#{email} and phone=#{phone}
</select>

<update id="pwupdate">
update tbl_inyeon_user set pw=#{pw} where email=#{email}
</update>

<select id="searchNaver" resultType="com.lifetheater.naver.model.NaverVO">
select email from tbl_inyeon_user where email=#{email}
</select>

<insert id="naverinsert" >
insert into tbl_inyeon_user (email,pw,name,reg_date,user_key,membertype,phone,login_way) values (#{email},'12345678912345',#{name},sysdate,'hye_ah',1,2,2)
</insert>

<update id="naverupdate">
update tbl_inyeon_user set phone=#{phone} where email=#{email}
</update>

<select id="searchKakao" resultMap="KakaoUserMap">
select email from tbl_inyeon_user where email=#{email}
</select>

<insert id="kakaoinsert">
insert into tbl_inyeon_user (email,pw,name,reg_date,user_key,membertype,phone,login_way) values (#{email},'12345678912345',#{nickname},sysdate,'hye_ah',1,2,3)
</insert>

<update id="kakaoupdate">
update tbl_inyeon_user set phone=#{phone} where email=#{email}
</update>
</mapper>




























